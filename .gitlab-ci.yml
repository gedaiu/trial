stages:
  - build
  - test
  - pack
  - test-package
  - web

.build_template: &build_definition
  stage: build
  tags:
    - docker-trial
  variables:
    TZ: "Europe/Moscow"
    DEBIAN_FRONTEND: "noninteractive"
  before_script:
    - mkdir -p vendor/apt
    - mv vendor/dub /root/.dub || true
    - apt-get update || true
    - apt-get -o dir::cache::archives="vendor/apt" install -y build-essential libssl-dev libevent-dev libcurl4 gcc wget libc6-dev git libmagickwand-dev rsync xz-utils libz-dev libsqlite3-dev
  after_script:
    - mv /root/.dub vendor/dub || true
  artifacts:
    paths:
      - trial
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - vendor/apt
      - vendor/dub

.test_template: &test_definition
  image: ubuntu:22.04
  stage: test
  tags:
    - docker-trial
  variables:
    TZ: "Europe/Moscow"
    DEBIAN_FRONTEND: "noninteractive"
  before_script:
    - mkdir -p vendor/apt
    - mv vendor/dub /root/.dub || true
    - apt-get update || true
    - apt-get -o dir::cache::archives="vendor/apt" install -y build-essential libssl-dev libevent-dev libcurl4 gcc wget libc6-dev git libmagickwand-dev rsync xz-utils libz-dev libsqlite3-dev
    - mv trial /usr/local/bin
  after_script:
    - mv /root/.dub vendor/dub || true
  script:
    - trial
  artifacts:
    paths:
      - .trial
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - vendor/apt
      - vendor/dub
  dependencies:
    - dmd-ubuntu

dmd-ubuntu:
  <<: *build_definition
  image: ubuntu:22.04
  script:
    - wget http://downloads.dlang.org/releases/2.x/2.100.0/dmd_2.100.0-0_amd64.deb
    - dpkg -i dmd_2.100.0-0_amd64.deb
    - dmd --version
    - dub --version
    - dub build :runner --build release

ldc-ubuntu:
  <<: *build_definition
  image: ubuntu:22.04
  script:
    - ls ldc2-1.30.0-linux-x86_64.tar.xz || https://github.com/ldc-developers/ldc/releases/download/v1.30.0/ldc2-1.30.0-linux-x86_64.tar.xz
    - tar -xf ldc2-1.30.0-linux-x86_64.tar.xz
    - rsync -vau ldc2-1.30.0-linux-x86_64/ /usr/local/
    - ldc2 --version
    - dub --version
    - dub build :runner --build release

dmd-fedora:
  stage: build
  image: fedora:36
  tags:
    - docker-trial
  before_script:
    - mv vendor/dnf /var/cache/dnf || true
    - mv vendor/dub /root/.dub || true
    - dnf install -y openssl-devel libcurl-devel wget
    - mkdir -p vendor/rpm
    - cd vendor/rpm
    - ls dmd-2.100.0-0.fedora.x86_64.rpm || wget http://downloads.dlang.org/releases/2.x/2.100.0/dmd-2.100.0-0.fedora.x86_64.rpm
    - dnf install -y ./dmd-2.100.0-0.fedora.x86_64.rpm
    - cd ../..
  script:
    - dmd --version
    - dub --version
    - dub build :runner --build release
    - mv trial trial-fedora
  after_script:
    - mv /var/cache/dnf vendor/dnf || true
    - mv /root/.dub vendor/dub || true
  artifacts:
    paths:
      - trial-fedora
  cache:
    key: "$CI_JOB_NAME"
    paths:
      - vendor/rpm
      - vendor/dnf
      - vendor/dub

trial-ldc-1.30.0:
  <<: *test_definition
  script:
    - mkdir -p vendor/ldc
    - cd vendor/ldc
    - wget https://github.com/ldc-developers/ldc/releases/download/v1.30.0/ldc2-1.30.0-linux-x86_64.tar.xz
    - tar -xf ldc2-1.30.0-linux-x86_64.tar.xz
    - rsync -vau ldc2-1.30.0-linux-x86_64/ /usr/local/
    - cd ../../
    - trial --coverage
  artifacts:
    paths:
      - .trial
    reports:
      junit: .trial/xunit/*.xml

trial-dmd-2.100.0:
  <<: *test_definition
  script:
    - wget http://downloads.dlang.org/releases/2.x/2.100.0/dmd_2.100.0-0_amd64.deb
    - dpkg -i dmd_2.100.0-0_amd64.deb
    - trial --coverage

examples:
  <<: *test_definition
  script:
    - wget http://downloads.dlang.org/releases/2.x/2.100.0/dmd_2.100.0-0_amd64.deb
    - dpkg -i dmd_2.100.0-0_amd64.deb
    - trial --coverage
    - cd examples/spec
    - trial
    - cd ../unittest
    - trial
    - cd ../test-class
    - trial
    - cd ../..

linux-packages:
  stage: pack
  only:
    - tags
  tags:
    - docker-trial
  image: ubuntu:22.04
  dependencies:
    - dmd-ubuntu
    - dmd-fedora
  variables:
    TZ: "Europe/Moscow"
    DEBIAN_FRONTEND: "noninteractive"
  script:
    - apt-get update -y
    - apt-get install -y ruby ruby-dev rubygems build-essential libevent-dev rpm libssl-dev git
    - gem install --no-document fpm
    - fpm --version
    - ls -lsah
    - pwd
    - ./trial --version
    - VER=`cat runner/trial/version_.d | grep trialVersion | cut -d \" -f 2 | cut -d "-" -f 1`-master
    - mkdir -p tmp/ubuntu/usr/local/bin
    - mkdir -p tmp/fedora/usr/local/bin
    - cp trial tmp/ubuntu/usr/local/bin
    - cp trial-fedora tmp/fedora/usr/local/bin/trial
    - cd tmp
    - fpm -s dir -t deb -n trial -v $VER --license MIT -m szabobogdan3@gmail.com --url "http://trial.szabobogdan.com" --description "The extensible test runner for DLang" -d "libssl-dev" ./ubuntu/usr/local/bin/=/usr/local/bin
    - fpm -s dir -t rpm -n trial -v $VER --license MIT -m szabobogdan3@gmail.com --url "http://trial.szabobogdan.com" --description "The extensible test runner for DLang" --depends "openssl-devel" ./fedora/usr/local/bin/=/usr/local/bin
    - cd ..
  artifacts:
    paths:
      - tmp/*.rpm
      - tmp/*.deb

master-linux-packages:
  stage: pack
  only:
    - master
  tags:
    - docker-trial
  image: ubuntu:22.04
  dependencies:
    - dmd-ubuntu
    - dmd-fedora
  variables:
    TZ: "Europe/Moscow"
    DEBIAN_FRONTEND: "noninteractive"
  script:
    - apt-get update -y
    - apt-get install -y ruby ruby-dev rubygems build-essential libevent-dev rpm libssl-dev git
    - gem install --no-document fpm
    - fpm --version
    - ls -lsah
    - pwd
    - ./trial --version
    - VER=`cat runner/trial/version_.d | grep trialVersion | cut -d \" -f 2 | cut -d "-" -f 1`-master
    - mkdir -p tmp/ubuntu/usr/local/bin
    - mkdir -p tmp/fedora/usr/local/bin
    - cp trial tmp/ubuntu/usr/local/bin
    - cp trial-fedora tmp/fedora/usr/local/bin/trial
    - cd tmp
    - fpm -s dir -t deb -n trial -v $VER --license MIT -m szabobogdan3@gmail.com --url "http://trial.szabobogdan.com" --description "The extensible test runner for DLang" -d "libssl-dev" ./ubuntu/usr/local/bin/=/usr/local/bin
    - fpm -s dir -t rpm -n trial -v $VER --license MIT -m szabobogdan3@gmail.com --url "http://trial.szabobogdan.com" --description "The extensible test runner for DLang" --depends "openssl-devel" ./fedora/usr/local/bin/=/usr/local/bin
    - cd ..
  artifacts:
    paths:
      - tmp/*.rpm
      - tmp/*.deb

docker-dmd:
  stage: pack
  only:
    - tags
    - master
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY_IMAGE/dmd-2.100.0:$CI_COMMIT_REF_NAME
  dependencies:
    - dmd-ubuntu
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker info
  script:
    - cp trial docker/trial
    - cd docker
    - docker build --no-cache=true -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

docker-ldc:
  stage: pack
  only:
    - tags
    - master
  image: docker:latest
  variables:
    DOCKER_DRIVER: overlay2
    IMAGE_TAG: $CI_REGISTRY_IMAGE/ldc-1.30.0:$CI_COMMIT_REF_NAME
  dependencies:
    - ldc-ubuntu
  services:
    - docker:dind
  before_script:
    - docker login -u gitlab-ci-token -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker info
  script:
    - cp trial docker/trial
    - cd docker
    - docker build --no-cache=true -t $IMAGE_TAG .
    - docker push $IMAGE_TAG

ubuntu-22.04:
  stage: test-package
  only:
    - tags
    - master
  image:
    name: ubuntu:22.04
  dependencies:
    - linux-packages
    - master-linux-packages
  script:
    - ls -lsa
    - pwd
    - ls -lsa tmp
    - apt-get update -y || true
    - apt-get install -y libssl-dev libevent-dev
    - dpkg -i tmp/*.deb
    - trial --version

fedora-36:
  stage: test-package
  only:
    - tags
    - master
  image:
    name: fedora:36
  dependencies:
    - linux-packages
    - master-linux-packages
  script:
    - ls -lsa
    - pwd
    - ls -lsa tmp
    - dnf update -y
    - dnf install -y openssl
    - dnf install -y tmp/*.rpm
    - trial --version

pages:
  stage: web
  only:
    - tags
  image:
    name: fedora:36
  tags:
    - docker-trial
  dependencies:
    - linux-packages
    - trial-dmd-2.100.0
  before_script:
    - dnf update -y
    - dnf install -y npm wget gcc glibc-devel libcurl libgcc
    - npm install -g allure-commandline@1.4.23
    - wget http://downloads.dlang.org/releases/2.x/2.100.0/dmd-2.100.0-0.fedora.x86_64.rpm
    - dnf install -y rsync openssl-devel dmd-2.100.0-0.fedora.x86_64.rpm java-1.8.0-openjdk.x86_64
  script:
    - dub build :lifecycle -b ddox
    - cd website
    - npm install
    - node app.js
    - node docs.js
    - mv web ../public
    - cd ..
    - mkdir public/files
    - cp tmp/*.deb public/files
    - cp tmp/*.rpm public/files
    - mv docs public/api
    - rm public/api/styles/ddox.css
    - mv website/ddox.css public/api/styles/ddox.css
    - mv .trial public/artifacts
    - mv public/artifacts/allure public/artifacts/allure-raw
    - allure -v generate --output public/artifacts/allure public/artifacts/allure-raw
  artifacts:
    paths:
      - public
